import org.gradle.internal.jvm.Jvm

//noinspection GroovyAssignabilityCheck
version "$version"

ext.library_project_trove4j = files(rootProject.file('lib/trove.jar'))
ext.library_project_asm_all = files(rootProject.file('lib/asm-all.jar'))

allprojects {
  repositories {
    mavenCentral()
  }

  apply plugin: 'java'
  sourceCompatibility = 1.6
  targetCompatibility = 1.6

  configurations {
    testArtifacts.extendsFrom testRuntime
  }

  dependencies {
    runtime files(Jvm.current().toolsJar)
  }

  sourceSets {
    main.java.srcDirs 'src'
  }
}

//noinspection GrUnresolvedAccess
task wrapper(type: Wrapper) {
  gradleVersion = '4.5'
}

task coverageAgentJar(type: Jar) {
  baseName = "coverage-agent"
  destinationDir = file("dist")
  manifest.attributes(
      "Premain-Class": "com.intellij.rt.coverage.main.CoveragePremain",
      "Boot-Class-Path": "$archiveName"
  )
  from(sourceSets.main.output)
  from(["util", "instrumentation"].collect({ project(":$it").sourceSets.main.output }))
  from { zipTree('lib/trove.jar') } {
    include(troveClasses())
  }
  from { zipTree('lib/asm-all.jar') } {
    include '**/*.class'
  }
}

private static troveClasses() {
  ['THash.class'
   , 'Equality.class'
   , 'THashSet.class'
   , 'TIntHash.class'
   , 'TLongHash.class'
   , 'PrimeFinder.class'
   , 'TIntHashSet.class'
   , 'TObjectHash.class'
   , 'HashFunctions.class'
   , 'TPrimitiveHash.class'
   , 'TObjectFunction.class'
   , 'TIntObjectHashMap.class'
   , 'TObjectIntHashMap.class'
   , 'TLongObjectHashMap.class'
   , 'TIntHashingStrategy.class'
   , 'TIntObjectProcedure.class'
   , 'TLongObjectProcedure.class'
   , 'TLongHashingStrategy.class'
   , 'TObjectHashingStrategy.class'].collect { "**/$it" }
}

build.dependsOn(coverageAgentJar)